DROP TABLE IF EXISTS films, user_user, user_friends, rate_users, rate_mpa, genres,
    film_genres, events, reviews, review_rating, directors, film_director;

CREATE TABLE IF NOT EXISTS genres
(
    genre_id   INT PRIMARY KEY,
    genre_name VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS rate_mpa
(
    mpa_id          INT PRIMARY KEY,
    mpa_name        VARCHAR(50),
    mpa_description VARCHAR(200)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id           BIGINT PRIMARY KEY AUTO_INCREMENT,
    film_name         VARCHAR(100) NOT NULL,
    film_release_date DATE         NOT NULL CHECK (film_release_date > '1895-12-28'),
    film_description  VARCHAR(200),
    film_duration     INTEGER      NOT NULL,
    mpa_id            INTEGER REFERENCES rate_mpa (mpa_id)
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    genre_id BIGINT REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE,

    CONSTRAINT pkFilmGenres PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS directors
(
    director_id   BIGINT PRIMARY KEY auto_increment,
    director_name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS film_director
(
    film_id     BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    director_id BIGINT REFERENCES directors (director_id) ON DELETE CASCADE,

    CONSTRAINT pkFilmDirector PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS user_user
(
    user_id       BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_email    VARCHAR(100),
    user_login    VARCHAR(50) NOT NULL UNIQUE,
    user_name     VARCHAR(100),
    user_birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS rate_users
(
    film_id BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    user_id BIGINT REFERENCES USER_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT pk_rate_users PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id       BIGINT REFERENCES USER_USER (USER_ID) ON DELETE CASCADE,
    friend_id     BIGINT REFERENCES USER_USER (USER_ID) ON DELETE CASCADE,
    friend_status BOOlEAN,
    CONSTRAINT pk_user_friends PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    review_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     BIGINT REFERENCES user_user (user_id) ON DELETE CASCADE,
    film_id     BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    content     varchar NOT NULL,
    is_positive boolean NOT NULL,
    deleted Boolean DEFAULT false
);

CREATE TABLE IF NOT EXISTS review_rating
(
    review_id BIGINT REFERENCES reviews (review_id) ON DELETE CASCADE,
    user_id   BIGINT REFERENCES user_user (user_id) ON DELETE CASCADE,
    useful    BIGINT NOT NULL,
    --составной первичный ключ, чтобы уникально идентифицировать useful
    CONSTRAINT pk_review_useful PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    BIGINT REFERENCES user_user (user_id) ON DELETE CASCADE,
    event_type varchar(20),
    operation  varchar(20),
    event_time BIGINT,
    entity_id  BIGINT
);